
---注释---------------------------
--该脚本选用脚本！ 可以自由编辑，想刷某个地图或者刷到某个等级都可以设置(等级设置在最后一行)
--如果地图名字在两个不同的难度，那么会选择当前难度的地图刷， 例如 你要刷“河道”地图，如果你在 第一部 那么会取刷第一部的"河道",如果角色在第二部 则去刷第二部的河道
--尽量不要去刷有小房间的地图



加载配置脚本("通用函数")
加载配置脚本("通用配置")

局部变量 刷到角色等级 =  70
局部变量 刷图百分比 = 0.7
局部变量 循环地图名字 = {"河道"}   ---填写地图名字，刷图百分比默认60%

定义函数 处理事件(事件名)
    如果 事件名 == "背包已满事件" 那么
        如果 使用传送卷轴到地图() ~= 真 那么
            LogE("背包满使用传送卷轴到地图 失败")
            返回 假
        结束
        如果 自动存仓() ~= 真 那么 
            LogE("背包满之自动存仓失败")
            返回 假
        结束
        如果 自动出售() ~= 真 那么
            LogE("背包满之自动出售失败")
            返回 假
        结束
        返回 真
    否则如果 事件名 == "死亡复活前事件" 那么
        等待召唤物死亡()
        返回 真
    结束
    返回 真
结束

定义函数 循环杀地图到等级(最大等级)
    局部变量 当前等级 = 当前角色等级()
    LogE("当前角色---------------:" .. 当前等级)
    while 当前角色等级() < 最大等级 do
        math.randomseed(tostring(os.time()):reverse():sub(1, 7))
        局部变量 地图数量 = table.getn(循环地图名字)
        局部变量 索引 = math.random(1,地图数量)
        局部变量 地图名 = 循环地图名字[索引]
        如果 地图名 == 空 那么
            LogE("地图名为空:"..索引)
            返回 假
        结束
        局部变量 执行事件函数 = 定义函数()
            如果 在城镇() ~= 真 那么
                使用传送卷轴到地图() 
            结束
            如果 杀到指定地图(地图名,-1,假,假) ~= 真 那么
                LogE("循环杀地图之杀到指定地图失败:"..地图名)
                返回 假
            结束
            全图杀怪(真,刷图百分比)   --刷图百分比 60%
            返回 假
        结束
        执行并等待事件(执行事件函数, 处理事件, {"死亡复活前事件","背包已满事件"}) 
    end

    LogE("已经达到最大等级---------------:" .. 最大等级)
    返回  真
结束

定义函数 处理游戏内场景()
    循环杀地图到等级(刷到角色等级)
结束

场景循环处理({
    通用_选择角色场景,
    游戏内场景(处理游戏内场景),
}):处理()