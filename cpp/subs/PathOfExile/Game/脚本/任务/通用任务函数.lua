

定义函数 通用任务_全图杀怪(任务, 重新遍历地图)
    如果 全图杀怪(重新遍历地图) ~= 真 那么
        LogE("通用任务_全图杀怪之全图杀怪失败")
        返回 假
    结束
    返回 真
结束

--可以领取多个奖励
定义函数 通用任务_领取奖励(任务,NPC名字,奖励表)
    如果 NPC名字 == 空 那么
        LogE("通用任务_领取奖励之NPC名字不能为空")
        返回 假
    结束
    如果 type(奖励表) ~= "table" 那么
        LogE("通用任务_领取奖励之奖励内容必须是表类型")
        返回 真
    结束
    for _, 对话奖励领取 in ipairs(奖励表) 执行
        局部变量 对话内容
        局部变量 奖励名字或索引
        如果 type(对话奖励领取) == "table" 那么
            对话内容 = 对话奖励领取[1]
            奖励名字或索引 = 对话奖励领取[2]
        否则
            LogE("通用任务_领取多个奖励之填写奖励错误")
            返回 假
        结束
        如果 通用任务_提交任务(任务,NPC名字,对话内容,奖励名字或索引) ~= 真 那么
            LogE("通用任务_领取多个奖励之领取奖励失败:"..NPC名字 .. "," ..对话内容 )
        结束
        关闭所有面板()
    结束
    返回 真
结束

定义函数 通用任务_提交任务(任务,NPC名字,对话内容,物品名字或索引,接任务NPC)
    如果 NPC名字 == 空 那么
        LogE("通用任务_提交任务之NPC名字不能为空")
        返回 假
    结束
    如果 对话内容 == 空 那么
        LogE("通用任务_提交任务之对话内容不能为空")
        返回 假
    结束
    如果 物品名字或索引 == 空 那么
        logE("通用任务_提交任务之物品名字不能为空")
        返回 假
    结束
    局部变量 目标地图 = 任务.地图名
    如果 目标地图 == 空 那么
        LogE("通用任务_提交任务之目标地图为空,任务名:" .. 任务.任务名())
        返回 假
    结束
    如果 杀到指定地图(目标地图) ~= 真 那么
        LogE("通用任务_提交任务之杀到目标地图失败：" .. 目标地图)
        返回 假
    结束
    如果 在城镇() == 真 那么
        自动存仓()
        自动出售()
    结束
    如果 杀到打开目标(NPC名字) ~= 真 那么
        LogE("通用任务_提交任务之打开目标失败" .. NPC名字)
        返回 假
    结束
    对话NPC(对话内容)
    如果 获取奖励物品(物品名字或索引) ~= 真 那么
        LogE("通用任务_提交任务之获取物品失败" .. 物品名字或索引)
        返回 假
    结束
    对话NPC("再会")
    如果 接任务NPC ~= 空 那么
        如果 打开目标(接任务NPC) ~= 真 那么
            LogE("通用任务_提交任务之打开目标失败" .. 接任务NPC)
            返回 假
        结束
        对话NPC("再会")
    结束
    关闭所有面板()
    如果 在城镇() == 真 那么
        自动出售()
        --自动存仓()
        局部变量 角色等级 = 当前角色等级()
        如果 角色等级 >= 5 且 角色等级 <= 15 那么
            保持购买物品("魔卫复苏",1)
        结束
        如果 角色等级 >= 8 且 角色等级 <= 35 那么
            保持购买物品("近战伤害扩散(辅)",1)
        结束
        如果 角色等级 >= 20 且 角色等级 <= 25 那么
            保持购买物品("近战物理伤害(辅)",1)
        结束
        如果 角色等级 >= 18 且 角色等级 <= 35 那么
            保持购买物品("近战物理伤害(辅)",1)
        结束
        如果 角色等级 >= 5 且 角色等级 <= 15 那么
            保持购买物品("召唤愤怒狂灵",1)
        结束
        如果 角色等级 >= 38 且 角色等级 <= 45 那么
            保持购买物品("施法回响(辅)",1)
        结束
        如果 角色等级 >= 12 且 角色等级 <= 35 那么
            保持购买物品("血肉奉献",1)
        结束
        如果 角色等级 >= 30 且 角色等级 <= 35 那么
            保持购买物品("衰弱",1)
        结束
        如果 角色等级 >= 38 且 角色等级 <= 45 那么
            保持购买物品("受伤时施",1)
        结束
        如果 角色等级 >= 34 且 角色等级 <= 40 那么
            保持购买物品("召唤烈焰魔像",1)  
        结束
        如果 角色等级 >= 38 且 角色等级 <= 45 那么
            保持购买物品("高阶多重投射(辅)t",1)  
        结束
        如果 角色等级 >= 18 且 角色等级 <= 40 那么
            保持购买物品("精准破坏(辅)",1)  
        结束
        如果 角色等级 >= 8 且 角色等级 <= 40 那么
            保持购买物品("召唤生物伤害(辅)",1)  
        结束
        如果 角色等级 >= 24 且 角色等级 <= 35 那么
            保持购买物品("憎恨",1)  
        结束
        如果 角色等级 >= 31 且 角色等级 <= 40 那么
            保持购买物品("和善(辅)",1)  
        结束
        自动镶嵌宝石()
    结束

    返回 真
结束

定义函数 通用任务_对话NPC(任务,NPC名字,对话内容)
    局部变量 目标地图 = 任务.地图名
    如果 目标地图 == 空 那么
        LogE("通用任务_提交任务之目标地图为空,任务名:" .. 任务.任务名())
        返回 假
    结束
    如果 杀到指定地图(目标地图) ~= 真 那么
        LogE("通用任务_提交任务之杀到目标地图失败：" .. 目标地图)
        返回 假
    结束

    如果 NPC名字 == "Weylam Roth now" 那么
        局部变量 npc = 查找最近的目标("Weylam Roth")
        打开目标(npc)
    否则
        如果 打开目标(NPC名字) ~= 真 那么
            LogE("通用任务_提交任务之打开目标失败" .. NPC名字)
            返回 假
        结束
    结束
    对话NPC(对话内容)
    延迟(5)
结束
----------------------------------------------------------

--杀到任务地图操作
定义函数 通用任务_杀到任务地图操作函数(任务,操作表,目标地图)
    --检测章节等级()   
    局部变量 目标地图名 = 目标地图
    如果 目标地图名 == 空 那么
        目标地图名 = 任务.地图名
    结束
    如果 目标地图名 == "当前地图" 那么
        目标地图名 = 当前地图名字()
    结束
    如果 在城镇() == 真 那么
        自动存仓()
        自动出售()
    结束
    如果 杀到指定地图(目标地图名) ~= 真 那么
        LogE("通用任务_杀到打开地图失败：" .. 目标地图名)
        返回 假
    结束
    如果 type(操作表) ~= "table" 那么
        LogE("通用任务_杀到任务地图操作之杀到目标地图:".. 目标地图名)
        返回 真
    结束  
    for _, 目标地图操作 in ipairs(操作表) 执行
        局部变量 操作类型
        局部变量 目标名
        如果 type(目标地图操作) == "table" 那么
            操作类型 = 目标地图操作[1]
            目标名 = 目标地图操作[2]
        否则
            LogE("通用任务_杀到任务地图操作之操作必须是表类型 查看相关函数")
            返回 假
        结束
        如果 目标名 == 空 那么
            LogE("通用任务_杀到任务地图操作之目标名不能为空")
            返回 假
        结束 
        如果 操作类型 == "杀到" 那么
            如果 杀到目标(目标名) ~= 真 那么
                LogE("通用任务_杀到目标之失败" .. 目标名)
            结束
        否则如果 操作类型 == "杀死" 那么
            如果 杀到杀死目标(目标名) ~= 真 那么
                LogE("通用任务_杀到杀死目标之杀死目标失败" .. 目标名)
            结束
        否则如果 操作类型 == "移动" 那么
            如果 移动到目标(目标名) ~= 真 那么
                LogE("通用任务_杀到杀死目标之移动到目标失败" .. 目标名)
            结束
        否则如果 操作类型 == "全杀" 那么
            如果 全图杀怪(真,-1,0) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之全图杀怪失败：" .. 目标名)
            结束
        否则如果 操作类型 == "打开" 那么
            如果 杀到打开目标(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之打开目标失败：" .. 目标名)
            结束
        否则如果 操作类型 == "重新打开" 那么
            如果 杀到打开目标(目标名,假) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之打开目标失败：" .. 目标名)
            结束
        否则如果 操作类型 == "打开附近" 那么
            如果 打开附近对象(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之打开附近对象失败：" .. 目标名)
            结束
        否则如果 操作类型 == "杀到地图" 那么
            如果 杀到指定地图(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之杀到指定地图失败：" .. 目标名)
            结束
        否则如果 操作类型 == "检测任务" 那么
            如果 查找任务(目标名) == 真 那么
                LogE("通用任务_杀到任务地图操作之检测任务失败：" .. 目标名)
                返回 真
            结束
        否则如果 操作类型 == "击败" 那么
            如果 杀到杀死NPC怪(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之击败之杀到杀死npc怪目标失败：" .. 目标名)
                返回 假    
            结束
            延迟(2)
        否则如果 操作类型 == "杀到房间" 那么
            如果 杀到房间(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之杀到房间失败：" .. 目标名)
            结束
        否则如果 操作类型 == "拾取" 那么
            如果 拾取最近任务物品() ~= 真 那么
                LogE("通用任务_杀到任务地图操作之拾取任务物品失败：")
            结束
        否则如果 操作类型 == "检测背包物品" 那么
            局部变量 物品数量 = 获得物品数量(目标名)
            如果 检查物品特殊处理(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之检查物品特殊处理失败："..目标名)
            结束
        否则如果 操作类型 == "对话" 那么
            如果 杀到打开目标(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之打开目标失败：" .. 目标名)
            结束
            对话NPC("继续")
            对话NPC("再会")
        否则如果 操作类型 == "访问" 那么
            如果 杀到打开目标(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之打开目标失败：" .. 目标名)
            结束
            对话NPC("继续")
        否则如果 操作类型 == "开启装置" 那么
            如果 开启地图装置(目标名) ~= 真 那么
                LogE("通用任务_杀到任务地图操作之开启地图装置失败：" .. 目标名)
            结束
        否则
            LogE("通用任务_杀到任务地图操作之没有定义该操作类型:" .. 操作类型)
            返回 假
        结束
    结束
    延迟(2)
    返回 真
结束

定义函数 处理任务事件(事件名)
    如果 事件名 == "背包已满事件" 那么
        如果 使用传送卷轴到地图() ~= 真 那么
            LogE("背包满使用传送卷轴到地图 失败")
            返回 假
        结束
        如果 杀到指定地图("萨恩营地",3,假) ~= 真 那么
            LogE("背包满之杀到城镇失败")
            返回 假
        结束
        如果 自动存仓() ~= 真 那么 
            LogE("背包满之自动存仓失败")
            返回 假
        结束
        如果 自动出售() ~= 真 那么
            LogE("背包满之自动出售失败")
            返回 假
        结束
        返回 假 
    否则如果 事件名 == "死亡复活前事件" 那么
        等待召唤物死亡(真)
        返回 假
    结束
    返回 真
结束

定义函数 通用任务_杀到任务地图操作(任务,操作表,目标地图)
        局部变量 执行事件函数 = 定义函数()
            返回 通用任务_杀到任务地图操作函数(任务,操作表,目标地图)
        结束
        --返回 执行事件函数()
        返回 执行并等待事件(执行事件函数, 处理任务事件, {"死亡复活前事件"})
结束

-----------------------------------------------------------------------

定义函数 处理事件返回真(事件名)
    如果 事件名 == "死亡复活前事件" 那么
        等待召唤物死亡(假)
        返回 假
    结束
    返回 真
结束

定义函数 通用任务_杀到任务地图操作重复(任务,操作表,目标地图)
        局部变量 执行事件函数 = 定义函数()
            返回 通用任务_杀到任务地图操作函数(任务,操作表,目标地图)
        结束
        --返回 执行事件函数()
        返回 执行并等待事件(执行事件函数, 处理事件返回真, {"死亡复活前事件"})
结束

------------------任务时循环杀图--------------------------------------

定义函数 处理任务循环事件(事件名)
    如果 事件名 == "背包已满事件" 那么
        如果 使用传送卷轴到地图() ~= 真 那么
            LogE("背包满使用传送卷轴到地图 失败")
            返回 假
        结束
        如果 自动存仓() ~= 真 那么 
            LogE("背包满之自动存仓失败")
            返回 假
        结束
        如果 自动出售() ~= 真 那么
            LogE("背包满之自动出售失败")
            返回 假
        结束
        返回 真
    否则如果 事件名 == "死亡复活前事件" 那么
        等待召唤物死亡()
        返回 真
    结束
    返回 真
结束

-----------如果需要循环杀图  请屏蔽该行 然乎配置对应章节需要刷的地图和等级， 可以自由发挥， 也可按任务控制，不懂请联系对应代理------------------------
循环地图名字 = {
[2] = {"西部密林","魅影船墓","监狱大门"},
[3] = {"萨恩成废墟","北部密林","西部密林"},
[4] = {"水道遗迹","乌旗守卫兵营","皇家花园"},
[5] = {"奥瑞亚之道","水晶矿洞"},
[6] = {"绝望岩滩"},
[7] = {"寂默山岭","孤岛灯塔"},
[8] = {"堤道","北部密林","坠欲之殿 1 层"},
[9] = {"帝国平原","赤红通道"},
[10] = {"巨石丘陵","贫瘠之地"},
}
局部变量 章节等级 = {[2] = 20,[3] = 25,[4] = 35,[4] = 40,[5] = 45,[6] = 50,[7] = 60,[8] = 65,[9] = 70, [10] = 73}
定义函数 检测章节等级()
    局部变量 当前章节 = 获得当前章节()
    局部变量 章节要求等级 = 章节等级[当前章节] 
    局部变量 当前等级 = 当前角色等级()
    如果 章节要求等级 == 空 那么  返回  真 结束
    如果 当前等级 > 章节要求等级 那么 返回  真 结束
    局部变量 循环地图 = 循环地图名字[当前章节]
    如果 循环地图 == 空 那么
        LogE("当前章节没有配置循环地图：" ..当前章节)
        返回 真
    结束
    while 当前角色等级() < 章节要求等级 do
        局部变量 角色等级 = 当前角色等级()
        LogE("当前角色等级:" .. 角色等级 )
        math.randomseed(tostring(os.time()):reverse():sub(1, 7))
        局部变量 地图数量 = table.getn(循环地图)
        局部变量 索引 = math.random(1,地图数量)
        局部变量 地图名 = 循环地图[索引]
        如果 地图名 == 空 那么
            LogE("地图名为空:"..索引)
            返回 假
        结束
        如果 在城镇() ~= 真 那么
            使用传送卷轴到地图() 
        结束
        局部变量 执行事件函数 = 定义函数()
            如果 杀到指定地图(地图名) ~= 真 那么
                LogE("循环杀地图之杀到指定地图失败:"..地图名)
                返回 假
            结束
            全图杀怪(真,0.6)
            返回 假
        结束
        执行并等待事件(执行事件函数, 处理任务循环事件, {"死亡复活前事件","背包已满事件"}) 
    end
    LogE("已经达到最大等级---------------:" .. 章节要求等级)
    返回  真
结束


-----------------------------------------------------------------------
通用做任务_全图杀怪 = 做任务处理(通用任务_全图杀怪)
