
定义函数 注册交易物品过滤()
	刷新我的拍卖列表();

	添加消耗品的交易物品过滤器({
		{ "下级鉴定书" , 空, 空, 以指定的价格拍卖(33, 1) },
		{ "刚出炉的面包" , 空, 空, 按市场价的某个范围拍卖(40, 555, 2, 2) },
		--{ "强力药水" , 空, 空, 邮寄物品("角色名") },
	});
	添加装备的交易物品过滤器({
		{ "明光皮衣" , 空, 空, 以指定的价格拍卖(100, 1) },
		{ "羊毛绒衣" , 空, 空, 以指定的价格拍卖(20, 1, 3) },
		{ "铁索头盔" , 空, 空, 以指定的价格拍卖(20, 1) },
		{ 空 , 4, 30, 按市场价的某个范围拍卖(20, 100000) },
	 });
	添加材料的交易物品过滤器({
		{ "阿尔奇集团的魔能芯片", 空, 空, 以指定的价格拍卖(200, 2, 3) },
		--{ "修补的布片", 空, 空, 以指定的价格拍卖(188, 2, 3) },
		--{ "破旧的布絮", 空, 空, 以指定的价格拍卖(288, 2, 5) },
	 });
结束

定义函数 进入到副本事件()
	LuaLog("触发了->进入到副本事件");
结束

定义函数 从副本返回到城镇事件()
	LuaLog("触发了->从副本返回到城镇事件");
结束

定义函数 疲劳值使用完事件()
	LuaLog("触发了->疲劳值使用完事件");
结束

定义函数 不停地交易的计时器事件()
	LuaLog("不停地交易的计时器事件()");
	激活事件("处理邮件事件");
	等待触发事件("邮件处理完成事件", 20000);
	LuaLog("邮件处理完成")

	LuaLog("开始刷新我的拍卖列表");
	刷新我的拍卖列表();
	激活事件("处理交易事件");
	等待触发事件("交易完成事件", 20000);
	LuaLog("交易处理完成");

	--返回 假 会重复计时并执行这个函数，返回真则会中止此计时器
	返回 假
结束

定义函数 角色进入到游戏事件()
	LuaLog("触发了->角色进入到游戏事件");
	注册交易物品过滤();

	--第一个参数是计时的时间间隔，单位毫秒
	--注册计时器事件(1000 * 30, 不停地交易的计时器事件, "不停地交易的计时器事件");
	--表示30秒执行一次 不停地交易的计时器事件 函数
	注册计时器事件(1000 * 30, 不停地交易的计时器事件, "不停地交易的计时器事件");
	激活事件("不停地交易的计时器事件");
结束

加载脚本文件("逻辑控制.lua");
