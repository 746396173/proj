加载脚本文件("配置信息.lua");

----[[
输出脚本信息("脚本中的游戏状态是：" .. 转换成字符串(游戏状态()));

设置不会被交换的最低价值(100000);
--球员价值大于这个参数，控制台就会收到提示
设置高价值球员提示(2500001);
--参数是EP价格
--表示自己拍卖的球员的价格大于等于这个参数，则仓库号收不到这个拍卖信息
设置对方阵营不会接收到拍卖信息的价格(100000);
--参数是时间，单位小时
--设置拍卖超时下架时间(10)->某球员等待售出的时间不能超过10小时，否则下架
设置拍卖超时下架时间(2);

加载脚本文件("开卡流程.lua");

--用来交易球员
定义函数 普通号的交易流程()
	输出脚本信息("普通号的交易流程");

	--参数1是下限，参数2是上限，即在这个范围之间的才被认为是垃圾球员，才允许拍卖
	保持拍卖一个垃圾球员(20000, 100000);
	延迟(100);
	---------------------------------------
	--两个参数，表示价值范围，即若是某球员在这个价值范围内，则按照市场价卖掉它
	按照默认的价格拍卖一些球员(200000,2500000);

	自动刷新我的出售列表();
	延迟(500);

	--第一个参数是球员ID，第二个参数是拍卖的数量，第三个参数是价格
	--这个函数会保持这样的球员 以这样的价格在拍卖着 其数量小于等于第二个参数
	--第一个参数是球员的ID，球员的ID可以这样获取：
	--FIFA Online 3\_cache\externalAssets\players 或 FIFA Online 3\_cache\ob\externalAssets\players
	--在上面两个目录下可以看到类似p10535.png的图片文件
	--把p10535前面的p去掉，在前面加上88，就组合成了球员的ID，即8810535
	--球员ID现在也可以通过控制台来查看了，选择 查看此号球员信息 即可
	以指定的价格拍卖一些指定的球员(88184881, 2, 1100);

	---------------------------------------

	--自动购买一些仓库号球员，用来把EP交易给仓库号
	--参数是EP值
	--购买仓库号球员(100)->当EP大于等于100的时候才会购买仓库号球员
	购买仓库号球员(10000);
	延迟(100);


	---------------------------------------
	--如果需要换号的话，就把下面的--给去掉
	--如果 当前EP() < 20000 那么
	--	执行换号();
	--结束
	---------------------------------------
	自动刷新教练信息();
	延迟(300);

	自动处理下架();
	延迟(300);
结束

定义函数 其他流程()
	按ESC键();
	延迟(500);

	如果 需要自动选拔球员() 那么
		输出脚本信息("自动选拔球员");
		自动选拔球员();
		延迟(500);
		按ESC键();
	否则
		输出脚本信息("不需要自动选拔球员");
	结束

	局部变量 数量 = EP卡的数量()
	如果 数量 > 0 那么
		输出脚本信息("开EP卡了");
		开EP卡(1);
		延迟(500);
	结束

	数量 = 新EP卡的数量()
	如果 数量 > 0 那么
		输出脚本信息("开新EP卡了");
		开新EP卡(1);
		延迟(500);
	结束

	如果 有可以交换的球员() 那么
		输出脚本信息("交换球员");
		交换球员();
	结束


	局部变量 球员的数量 = 已拥有的球员的数量();
	如果 球员的数量 < 80 那么
		局部变量 要开的数量 = 80 - 球员的数量;
		输出脚本信息("开球员卡，补足70个球员");
		开卡补足一些球员(要开的数量);
	结束
	自动使用一些物品(10)

	如果 需要解雇球员() 那么
		输出脚本信息("自动解雇球员");
		自动解雇球员();
	结束

	选择对阵好友()

	接收保管箱物品();

	局部变量 自动比赛券的数量_ = 自动比赛券的数量();
	如果 自动比赛券的数量_ > 0 那么
		输出脚本信息("使用自动比赛券");
		使用一些自动比赛券(10);
	结束

	延迟(1000);
结束

定义函数 创建教练流程()
	输出脚本信息("创建教练流程");
	延迟(1000);
	按ESC键();
	延迟(1000);
	按ESC键();

	开始创建教练();
	延迟(1000);

	按ESC键();

	重复
		点击创建教练的输入框();
		按退格键(16);
		输入随机教练名();

		延迟(1500);
		解决创建教练时的弹框问题();
                延迟(500);
		点击创建教练的输入框();
		按退格键(16);
		输入随机教练名();

	直到 创建教练成功();

	延迟(10000);

	点击创建俱乐部();

	延迟(2000);

	确认创建俱乐部();
	延迟(2000);

	等待进入到新手引导画面();
	解决新教练练习赛问题()
结束

--返回真循环，否则就不循环
定义函数 主逻辑循环()
	如果 可以选择教练() 那么
		进入游戏();
	否则如果 需要走创建教练流程() 那么
		创建教练流程();

	否则如果 进入到游戏() 那么
		关闭每日任务框();
		延迟(1000);
		关闭每日任务框();

		如果 可以买GP礼包(3) 那么
			买GP礼包(3);
		结束

		选择友谊赛();
		选择经理人模式();
	否则如果 比赛完需要续约() 那么
		输出脚本信息("比赛完需要续约");
		关闭每日任务框();
		延迟(500);
		关闭每日任务框();

		其他流程();
		按ESC键();
		解决卡续约问题()
	否则如果 只是在比赛房间() 那么
		关闭每日任务框();
		延迟(500);
		关闭每日任务框();
		选择对阵好友()
	否则如果 选择了随机对手() 那么
		选择对阵电脑();
	否则如果 在比赛房间() 且 没有 选择了对阵电脑() 那么
		关闭每日任务框();
		输出脚本信息("选择对阵电脑");
		选择对阵电脑();
		延迟(500);
		按ESC键();
	否则如果 选择了对阵电脑() 那么
		输出脚本信息("选择了对阵电脑");
		关闭每日任务框();

		如果 没有 选择了弱队() 那么
			解决有时不能交易问题();
			延迟(200);
			自动选择弱队();
			输出脚本信息("自动选择弱队");
			延迟(2000);
		否则
			--其他流程();
			如果 需要补充候补球员() 那么
				输出脚本信息("补充候补球员");
				补充候补球员();
				延迟(1000);
			结束

			开卡流程();

			延迟(500);
			执行自动选拔球员();
			延迟(500);

			关闭每日任务框();
			开始比赛();
		结束

		延迟(500);
		按ESC键();

		--参数是分钟，即到了指定的时间，就会执行下面的 回到选择教练场景()
		--默认的是55分钟
		如果 到了指定的时间间隔(55) 那么
			执行换号();
		结束
	否则如果 可以选择球员进行比赛() 那么
		输出脚本信息("选择首发球员");
		点击右下角按钮();
	否则如果 已经比赛就绪() 那么
		输出脚本信息("准备完毕");
		点击右下角按钮();
	否则如果 有比赛动画() 那么
		输出脚本信息("比赛中");
		延迟(4000);
	否则如果 比赛已经结束() 那么
		输出脚本信息("比赛结束,选择奖励");
		点击右下角按钮();
		--其他流程();
	否则如果 可以选择比赛奖励() 那么
                输出脚本信息("翻牌");
		点击右下角按钮();
		按ESC键();
	结束

	返回 真
结束

循环 主逻辑循环() 执行
	延迟(2000);
	按ESC键();

	如果 可以执行普通号的交易流程() 那么
		普通号的交易流程();
	结束
结束
